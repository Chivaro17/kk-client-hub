import React from 'react';
import { TrendingUp, Clock, CheckCircle, AlertCircle } from 'lucide-react';

interface PipelineItem {
  id: number;
  title: string;
  client: string;
  stage: string;
  value: string;
  progress: number;
  dueDate: string;
  priority: 'High' | 'Medium' | 'Low';
}

const LivePipeline: React.FC = () => {
  const salesPipeline: PipelineItem[] = [
    {
      id: 1,
      title: "Commercial Renovation Proposal",
      client: "Heritage Construction LLC",
      stage: "Proposal Review",
      value: "$250K",
      progress: 75,
      dueDate: "Jan 20, 2024",
      priority: "High"
    },
    {
      id: 2,
      title: "Quality Assurance Contract",
      client: "Industrial Quality Tech",
      stage: "Negotiation",
      value: "$85K",
      progress: 45,
      dueDate: "Jan 25, 2024",
      priority: "Medium"
    },
    {
      id: 3,
      title: "Multi-Phase Development",
      client: "Metro Development Group",
      stage: "Planning",
      value: "$500K",
      progress: 30,
      dueDate: "Feb 1, 2024",
      priority: "High"
    }
  ];

  const projectStatuses = [
    { label: "Active Projects", count: 12, icon: TrendingUp, color: "text-green-600" },
    { label: "Pending Review", count: 5, icon: Clock, color: "text-yellow-600" },
    { label: "Completed", count: 28, icon: CheckCircle, color: "text-blue-600" },
    { label: "Overdue", count: 2, icon: AlertCircle, color: "text-red-600" }
  ];

  const getPriorityColor = (priority: string) => {
    switch (priority) {
      case 'High': return 'bg-red-100 text-red-800';
      case 'Medium': return 'bg-yellow-100 text-yellow-800';
      case 'Low': return 'bg-green-100 text-green-800';
      default: return 'bg-gray-100 text-gray-800';
    }
  };

  return (
    <div className="space-y-6">
      {/* Status Cards */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
        {projectStatuses.map((status, index) => (
          <div key={index} className="bg-white rounded-lg shadow p-6">
            <div className="flex items-center">
              <status.icon className={`h-8 w-8 ${status.color}`} />
              <div className="ml-4">
                <p className="text-sm font-medium text-gray-600">{status.label}</p>
                <p className="text-2xl font-bold text-gray-900">{status.count}</p>
              </div>
            </div>
          </div>
        ))}
      </div>

      {/* Sales Pipeline */}
      <div className="bg-white rounded-lg shadow-lg p-6">
        <div className="flex justify-between items-center mb-6">
          <h2 className="text-2xl font-bold text-gray-900">Sales Pipeline</h2>
          <div className="text-sm text-gray-500">
            Total Pipeline Value: <span className="font-semibold text-gray-900">$835K</span>
          </div>
        </div>
        
        <div className="space-y-4">
          {salesPipeline.map((item) => (
            <div key={item.id} className="border border-gray-200 rounded-lg p-4 hover:shadow-md transition-shadow">
              <div className="flex justify-between items-start mb-3">
                <div className="flex-1">
                  <h3 className="font-semibold text-gray-900">{item.title}</h3>
                  <p className="text-sm text-gray-600">{item.client}</p>
                </div>
                <div className="text-right">
                  <div className="text-lg font-bold text-gray-900">{item.value}</div>
                  <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${getPriorityColor(item.priority)}`}>
                    {item.priority}
                  </span>
                </div>
              </div>
              
              <div className="flex justify-between items-center mb-2">
                <span className="text-sm text-gray-600">{item.stage}</span>
                <span className="text-sm text-gray-600">Due: {item.dueDate}</span>
              </div>
              
              <div className="w-full bg-gray-200 rounded-full h-2">
                <div 
                  className="bg-red-600 h-2 rounded-full transition-all duration-300"
                  style={{ width: `${item.progress}%` }}
                ></div>
              </div>
              <div className="text-right text-sm text-gray-600 mt-1">{item.progress}% Complete</div>
            </div>
          ))}
        </div>
      </div>
    </div>
  );
};

export default LivePipeline;